from re import compile

### Format transformation for the DSLM algorithm.

if __name__ == '__main__':
    # Number of subgroups previously generated by the VLSD algorithm.
    number_of_subgroups_expected = 35212
    # Regex pattern.
    pattern = "^(?P<subgroup>.+) ; Sequence of instances tp = bitarray\\('(?P<positive_bitset>[01]+)'\\) ; Sequence of instances fp = bitarray\\('(?P<negative_bitset>[01]+)'\\) ; Quality Measure.+$"
    regex_object = compile(pattern)
    # Open and read the file with the subgroups and open and write the new file with the transformed subgroups.
    input_file = open("../subgroups/subgroups.txt", "r")
    output_file = open("input_subgroups.txt", "w")
    subgroups_read = 0
    for line in input_file:
        match_object = regex_object.fullmatch(line.rstrip("\n"))
        if match_object:
            positive_bitset = match_object.group("positive_bitset")
            negative_bitset = match_object.group("negative_bitset")
            output_file.write(match_object.group("subgroup") + " ; " + positive_bitset + " ; " + negative_bitset + "\n")
            subgroups_read = subgroups_read + 1
        else:
            print("Error in the subgroup number " + str(subgroups_read))
            subgroups_read = subgroups_read + 1
    input_file.close()
    output_file.close()
    # Check if all subgroups were correctly read.
    if (subgroups_read == number_of_subgroups_expected):
        print("All subgroups were correctly read.")
